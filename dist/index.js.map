{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst pkg = require('../package.json');\nconst threeD = require('3d-extensions');\nconst archive = require('archive-extensions');\nconst compressed = require('compressed-extensions');\nconst audio = require('audio-extensions');\nconst image = require('image-extensions');\nconst video = require('video-extensions');\nconst text = require('text-extensions');\nconst subtitle = require('subtitle-extensions');\nconst path = require('path');\nconst isGlob = require('is-glob');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('graceful-fs'));\nconst _debug = require('debug');\nconst glob = Promise.promisify(require('glob'));\nconst mv = Promise.promisify(require('mv'));\nconst mkdirp = Promise.promisify(require('mkdirp'));\nconst yaml = require('js-yaml');\nconst stringify = _.partialRight(require('stringify-object'), {\n  indent: '  ',\n  singleQuotes: false\n});\n\nconst configFile = '.declutter.yml';\n\nconst exts = _({\n  '3d': threeD,\n  archive: _(archive)\n    .concat(compressed)\n    .unique()\n    .concat(['pkg', 'bin'])\n    .value(),\n  audio: audio,\n  image: image,\n  video: video,\n  text: text,\n  subtitle: subtitle,\n  document: [\n    'pdf',\n    'doc',\n    'rtf',\n    'xls',\n    'xlsx',\n    'docx',\n    'ppt',\n    'pptx'\n  ],\n  application: [\n    'exe',\n    'app'\n  ],\n  font: [\n    'ttf',\n    'woff'\n  ]\n})\n  .mapValues(value => _.map(value, (extension) => extension.replace('.', '')))\n  .sort()\n  .value();\n\nconst allExts = _(exts)\n  .map((extensions, dest) => _.map(extensions, extension => [extension, dest]))\n  .flatten()\n  .object()\n  .sort()\n  .value();\n\nconst defaultDestinations = {\n  '3d': '3d',\n  document: 'document',\n  archive: 'archive',\n  image: 'image',\n  video: 'video',\n  subs: 'subtitle',\n  text: 'text',\n  audio: 'audio',\n  application: 'application',\n  font: 'font'\n};\n\nfunction extname(filename) {\n  return path.extname(filename).substring(1).toLowerCase();\n}\n\nfunction declutter(directory, opts) {\n  _.defaults(opts, {\n    dryRun: false,\n    debug: false\n  });\n\n  if (opts.debug) {\n    _debug.enable(pkg.name);\n  }\n\n  const debug = _debug(pkg.name);\n  const configpath = path.join(directory, '.declutter.yml');\n  const createdDirs = new Set();\n  let totalFiles = 0;\n\n  debug(`${directory}: Decluttering ${opts.dryRun && '(DRY RUN)'}...`);\n\n  return fs.readFileAsync(configpath, 'utf8')\n    .then(cfg => _.defaults(defaultDestinations, yaml.safeLoad(cfg)))\n    .catch(() => {\n      debug(`${directory}: No config in ${configpath}; using defaults`);\n      return defaultDestinations;\n    })\n    .then(destinations => {\n      debug(`${directory}: Pattern/subdir mapping:\\n` +\n        `${stringify(destinations)}`);\n      const globs = _(destinations)\n        .pick((dest, pattern) => isGlob(pattern))\n        .mapKeys((dest, pattern) => path.join(directory, pattern))\n        .mapValues(dest => path.join(directory, dest))\n        .value();\n      return Promise.map(_.keys(globs), globspec => {\n          const globdest = globs[globspec];\n          debug(`${directory}: Searching for ${globspec}`);\n          return glob(globspec)\n            .tap(globpaths => {\n              debug(`${directory}: ${globpaths.length} files matching ` +\n                `\"${globspec}\"`);\n            })\n            .then(globpaths => {\n              if (!opts.dryRun &&\n                globpaths.length && !createdDirs.has(globdest)) {\n                debug(`${directory}: +${globdest}/`);\n                return mkdirp(globdest)\n                  .return(globpaths);\n              }\n              return globpaths;\n            })\n            .tap(globpaths => {\n              if (globpaths.length) {\n                createdDirs.add(globdest);\n              }\n            })\n            .each(globpath => {\n              const destGlobpath = path.join(globdest, path.basename(globpath));\n              debug(`${globpath} => ${destGlobpath}`);\n              if (!opts.dryRun) {\n                return mv(globpath, destGlobpath);\n              }\n            })\n            .then(globpaths => {\n              totalFiles += globpaths.length;\n            });\n        })\n        .then(() => fs.readdirAsync(directory))\n        .tap(filenames => {\n          debug(`${directory}: ${filenames.length} files pre-filtering`);\n        })\n        .map(filename => path.join(directory, filename))\n        .filter(filepath => fs.statAsync(filepath)\n          .then(stat => !stat.isDirectory())\n          .catch(err => {\n            debug(`${directory}: Warning: ${err}`);\n            return false;\n          }))\n        .tap(filepaths => {\n          debug(`${directory}: ${filepaths.length} non-directories found`);\n        })\n        .filter(filepath => fs.lstatAsync(filepath)\n          .then(stat => !stat.isSymbolicLink() &&\n          path.basename(filepath) !== configFile)\n          .catch(err => {\n            debug(`${directory}: Warning: ${err}`);\n            return false;\n          }))\n        .tap(filepaths => {\n          debug(`${directory}: ${filepaths.length} non-symbolic links and ` +\n            `config files found`);\n        })\n        .filter(filepath => Boolean(allExts[extname(filepath)]))\n        .tap(filepaths => {\n          debug(`${directory}: ${filepaths.length} files matching known ` +\n            `extensions to be moved`);\n        })\n        .each(filepath => {\n          const ext = extname(filepath);\n          const dirname = destinations[allExts[ext]];\n          const dest = path.join(directory, dirname);\n          const filename = path.basename(filepath);\n          const destFilepath = path.join(dest, filename);\n          const relativeSrc = path.relative(directory, filepath);\n          const relativeDest = path.relative(directory, destFilepath);\n          debug(`${directory}: ${relativeSrc} => ${relativeDest}`);\n          if (!createdDirs.has(dest)) {\n            debug(`${directory}: +${dirname}/`);\n            if (!opts.dryRun) {\n              return mkdirp(dest)\n                .then(() => {\n                  createdDirs.add(dest);\n                  return mv(filepath, destFilepath);\n                });\n            }\n            createdDirs.add(dest);\n          }\n          if (!opts.dryRun) {\n            return mv(filepath, destFilepath);\n          }\n        })\n        .then(filepaths => {\n          totalFiles += filepaths.length;\n          debug(`${directory}: Files moved: ${totalFiles}`);\n          debug(`${directory}: Subdirs created: ${createdDirs.size}`);\n        });\n    })\n    .catch(err => {\n      debug(`Error: ${err}`);\n    });\n}\n\ndeclutter.version = pkg.version;\n\nmodule.exports = declutter;\n"]}